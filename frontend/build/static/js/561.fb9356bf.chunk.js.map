{"version":3,"file":"static/js/561.fb9356bf.chunk.js","mappings":"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","sources":["../node_modules/@emoji-mart/data/i18n|C:/Users/harir/Desktop/WebDesigning Challenge/Week 21/MERN SOCIAL/frontend/node_modules/@emoji-mart/data/i18n|sync|/^/.*/.json$","api/UserRequests.js","Components/Conversation/Conversation.jsx","api/MessageRequest.js","Components/ChatBox/ChatBox.jsx","Components/Talk/Talk.jsx","Pages/Chat/Chat.jsx","api/ChatRequests.js"],"sourcesContent":["var map = {\n\t\"./ar.json\": 2557,\n\t\"./be.json\": 8367,\n\t\"./cs.json\": 5977,\n\t\"./de.json\": 4896,\n\t\"./en.json\": 678,\n\t\"./es.json\": 2378,\n\t\"./fa.json\": 4057,\n\t\"./fi.json\": 7453,\n\t\"./fr.json\": 364,\n\t\"./hi.json\": 7992,\n\t\"./it.json\": 9438,\n\t\"./ja.json\": 6847,\n\t\"./kr.json\": 9983,\n\t\"./nl.json\": 1936,\n\t\"./pl.json\": 1902,\n\t\"./pt.json\": 9761,\n\t\"./ru.json\": 8656,\n\t\"./sa.json\": 193,\n\t\"./tr.json\": 7349,\n\t\"./uk.json\": 8329,\n\t\"./vi.json\": 1070,\n\t\"./zh.json\": 7268\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3738;","import { UserApi } from \"./UserApi\";\r\n\r\nexport const getUser = (userId) =>  UserApi.get(`/user/${userId}`); ","import React, { useEffect, useState } from 'react';\r\nimport './Conversation.css';\r\nimport { getUser } from '../../api/UserRequests';\r\n\r\nconst Conversation = ({data,currentUserId, online,userId,name ,avatar}) => {\r\n\r\n  const [userData,setUserData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const userId = data?.members?.find((id)=>id!==currentUserId);\r\n    const getUserData = async()=>{\r\n      try {\r\n        const {data} = await getUser(userId);\r\n        setUserData(data);\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n     \r\n    };\r\n    getUserData();\r\n   \r\n  }, [ ])\r\n  \r\n  return (\r\n    <>\r\n    <div>\r\n\r\n      <div className=\"follower conversation\">\r\n        <div>\r\n          {online && <div className=\"online-dot\"></div>}\r\n          <img src={userData?.user?.avatar?.url } alt=\"\" className=\"followerImage\"  style={{width:'50px', height:'50px'}} />\r\n          <div className=\"name\" style={{fontSize:\"0.8rem\"}}>\r\n            <span>{userData?.user?.name}</span>\r\n            <span >{online? \"online\":\"offline\"}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    <hr  style={{ width: \"85%\", border: \"0.1px solid #ececec\" }} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Conversation","import { UserApi } from \"./UserApi\";\r\n\r\nexport const getMessages = (id)=>UserApi.get(`/message/${id}`);\r\nexport const addMessage  = (data)=>UserApi.post(`/message/`,data);","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./ChatBox.css\";\r\nimport { getUser } from \"../../api/UserRequests\";\r\nimport { addMessage, getMessages } from \"../../api/MessageRequest\";\r\nimport { format } from \"timeago.js\";\r\nimport InputEmoji from \"react-input-emoji\";\r\n\r\nconst ChatBox = ({ chat, currentUser, setSendMessage, receiveMessage }) => {\r\n\r\n  const [userData, setUserData] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const scroll = useRef();\r\n\r\n  useEffect(() => {\r\n    if (receiveMessage !== null && receiveMessage?.chatId === chat?._id) {\r\n      setMessages((prevMessages) => [...prevMessages, receiveMessage]);\r\n\r\n    }\r\n  }, [receiveMessage, chat?._id]);\r\n\r\n  //fetching data from the header\r\n\r\n  useEffect(() => {\r\n    const userId = chat?.members?.find((id) => id !== currentUser);\r\n    const getUserData = async () => {\r\n      try {\r\n        const { data } = await getUser(userId);\r\n        setUserData(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (chat !== null) getUserData();\r\n  }, [chat, currentUser]);\r\n\r\n  //fetching data for messages\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const { data } = await getMessages(chat?._id);\r\n        setMessages(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (chat !== null) fetchMessages();\r\n  }, [chat]);\r\n\r\n  const handleChange = (newMessage) => {\r\n    setNewMessage(newMessage);\r\n  };\r\n\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      senderId: currentUser,\r\n      text: newMessage,\r\n      chatId: chat?._id,\r\n    };\r\n\r\n    //send message to database\r\n    try {\r\n      const { data } = await addMessage(message);\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n\r\n      setNewMessage(\"\"); // Clear the input after sending\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    //send message to socket server\r\n    const receiverId = chat?.members?.find((id) => id !== currentUser);\r\n    setSendMessage({ ...message, receiverId });\r\n  };\r\n\r\n  // Always scroll to the last message\r\n  useEffect(() => {\r\n\r\n    scroll?.current?.scrollIntoView({ behavior: \"smooth\" })\r\n\r\n  }, [messages])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ChatBox-container\">\r\n        {chat ? (\r\n          <>\r\n            <div className=\"chat-header\">\r\n              <div className=\"follower\">\r\n                <div>\r\n                  <img\r\n                    src={userData?.user?.avatar?.url}\r\n                    alt=\"\"\r\n                    className=\"followerImage\"\r\n                    style={{ width: \"50px\", height: \"50px\" }}\r\n                  />\r\n                  <div className=\"name\" style={{ fontSize: \"0.8rem\" }}>\r\n                    <span>{userData?.user?.name}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr style={{ width: \"85%\", border: \"0.1px solid #ececec\" }} />\r\n            </div>\r\n\r\n            {/* chatbox Messages */}\r\n            <div className=\"chat-body\">\r\n\r\n              {messages?.map((message, index) => (\r\n\r\n                <div ref={scroll}\r\n                  key={`${message?._id}-${message?.createdAt || 'defaultCreatedAt'}-${message?.updatedAt || 'defaultUpdatedAt'}-${index}`}\r\n                  className={\r\n                    message?.senderId === currentUser\r\n                      ? \"message own\"\r\n                      : \"message \"\r\n                  }\r\n                >\r\n                  <div>\r\n                    <span  >{message?.text}</span>\r\n                    <span className=\"message-divider\"> · </span>\r\n                    <span className=\"message-time\">{format(message?.createdAt)}</span>\r\n                  </div>\r\n\r\n                </div>\r\n              ))}\r\n\r\n\r\n            </div>\r\n            <div className=\"chat-sender\">\r\n              <div>+</div>\r\n              <InputEmoji value={newMessage} onChange={handleChange} />\r\n              <div className=\"send-button button\" onClick={handleSend}>\r\n                Send\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span className=\"chatbox-empty-message\">\r\n            Tap on a Chat to start Conversation...\r\n          </span>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../Conversation/Conversation.css';\r\nimport { getUser } from '../../api/UserRequests';\r\n\r\nconst Talk = ({userId, name, avatar}) => {\r\n\r\n  const [userData,setUserData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const getUserData = async()=>{\r\n      try {\r\n        const {data} = await getUser(userId);\r\n        setUserData(data);\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n     \r\n    };\r\n    getUserData();\r\n   \r\n  }, [ ])\r\n  \r\n  return (\r\n    <>\r\n    <div>\r\n\r\n      <div className=\"follower conversation\">\r\n        <div>\r\n          \r\n          <img src={userData?.user?.avatar?.url } alt=\"\" className=\"followerImage\"  style={{width:'50px', height:'50px'}} />\r\n          <div className=\"name\" style={{fontSize:\"0.8rem\"}}>\r\n            <span>{userData?.user?.name}</span>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    <hr  style={{ width: \"85%\", border: \"0.1px solid #ececec\" }} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Talk\r\n","import React, { useRef } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { newChat, userChats } from \"../../api/ChatRequests\";\r\nimport Conversation from \"../../Components/Conversation/Conversation\";\r\nimport ChatBox from \"../../Components/ChatBox/ChatBox\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Button } from \"@mui/material\";\r\nimport { getAllUsers, loadUser, logoutUser } from \"../../Actions/User\";\r\nimport Talk from \"../../Components/Talk/Talk\"\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Chat = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [chats, setChats] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [sendMessage, setSendMessage] = useState(null);\r\n  const [receiveMessage, setReceiveMessage] = useState({});\r\n  const socket = useRef();\r\n  const dispatch = useDispatch();\r\n  const socketURL = ' https://link-up-mppk.onrender.com:4000';\r\n\r\n\r\n  socket.current = io(socketURL);\r\n\r\n  useEffect(() => {\r\n    // Listen for 'user-blocked' event\r\n    socket.current.on(\"user-blocked\", ({ userId }) => {\r\n      // Handle the event here\r\n      dispatch(logoutUser());\r\n      <Navigate to=\"/block\" />;\r\n      // You can trigger a refresh, update UI, or take any other necessary action.\r\n    });\r\n\r\n    // Cleanup the event listener when the component unmounts\r\n    return () => {\r\n      socket.current.off(\"user-blocked\");\r\n    };\r\n  }, []);\r\n\r\n  const { users, loading } = useSelector((state) => state.allUsers);\r\n\r\n\r\n\r\n  //sending message to the socket server\r\n\r\n  useEffect(() => {\r\n\r\n    if (sendMessage !== null) {\r\n      socket.current.emit(\"send-message\", sendMessage);\r\n    }\r\n  }, [sendMessage]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"new-user-add\", user?._id);\r\n    socket.current.on(\"get-users\", (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [user]);\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getAllUsers(name));\r\n  };\r\n\r\n  // receive Message from socket s\r\n  useEffect(() => {\r\n    socket.current.on(\"receive-message\", (data) => {\r\n      setReceiveMessage(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getChats = async () => {\r\n      try {\r\n        const response = await userChats(user?._id);\r\n        const data = response?.data; // Extract data from the response\r\n        if (data !== null && data !== undefined) {\r\n          setChats(data);\r\n        } else {\r\n          console.log(\"Chat data is null or undefined.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getChats();\r\n  }, [user]);\r\n\r\n  // Filter out users who are already in the chat list\r\n  const filteredUsers = users?.filter((member) => {\r\n    // Check if the member's ID is not in any of the chat's members array\r\n    return !chats?.some((chat) => chat?.members?.includes(member?._id));\r\n  });\r\n\r\n  const handleTalkClick = async (userId) => {\r\n    try {\r\n\r\n      // Check if a chat with this user is already in progress\r\n      if (currentChat?.members?.includes(userId)) {\r\n        // Chat with this user already exists, do nothing\r\n        return;\r\n      }\r\n\r\n      // Check if a chat with this user is being created\r\n      if (sendMessage === null) {\r\n        // Set the user ID to initiate chat creation\r\n        setSendMessage(userId);\r\n      } else {\r\n        // A chat creation is already in progress, do nothing\r\n        return;\r\n      }\r\n\r\n      const existingChat = chats.find((chat) =>\r\n        chat?.members?.includes(user?._id) && chat?.members?.includes(userId));\r\n\r\n\r\n      if (user?._id !== userId) {\r\n        if (existingChat) {\r\n          setCurrentChat(existingChat);\r\n\r\n        } else {\r\n          const response = await newChat(user?._id, userId);\r\n          const newChatData = response?.data;\r\n\r\n          setCurrentChat(newChatData);\r\n        }\r\n        setSendMessage(null);\r\n\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating chat:\", error);\r\n    }\r\n  };\r\n\r\n  const checkOnlineStatus = (chat) => {\r\n    const chatMember = chat?.members?.find((member) => member !== user?._id);\r\n    const online = onlineUsers?.find((user) => user?.userId === chatMember);\r\n    return online ? true : false;\r\n  };\r\n  return (\r\n    <div className=\"Chat\">\r\n      <div className=\"Left-side-chat\">\r\n        <div className=\"Chat-container\">\r\n          <form className=\"userSearch\" onSubmit={submitHandler}>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"Name\"\r\n              required\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n\r\n            <Button disabled={loading} type=\"submit\">\r\n              Search\r\n            </Button>\r\n\r\n            <div className=\"Chat-list\">\r\n              {name !== \"\" &&\r\n                users &&\r\n                user &&\r\n                filteredUsers?.map((member) => (\r\n\r\n                  <div\r\n                    key={member?._id}\r\n                    onClick={() => handleTalkClick(member?._id)}\r\n                  >\r\n\r\n\r\n                    {member?._id !== user?._id && (\r\n                      <Talk\r\n                        key={member?._id}\r\n                        userId={member?._id}\r\n                        name={member?.name}\r\n                        avatar={member?.avatar?.url}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </form>\r\n\r\n          <h2>Chats</h2>\r\n          <div className=\"Chat-list\">\r\n            {chats.map((chat) => (\r\n              <div key={chat?._id} onClick={() => setCurrentChat(chat)}>\r\n                <Conversation\r\n                  key={chat?.createdAt}\r\n                  data={chat}\r\n                  currentUserId={user?._id}\r\n                  online={checkOnlineStatus(chat)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Right-side-chat\">\r\n        <div style={{ width: \"100%\", alignSelf: \"flex-end\" }}>\r\n          {/* chat body */}\r\n          {currentChat && (\r\n            <ChatBox\r\n              chat={currentChat}\r\n              currentUser={user?._id}\r\n              setSendMessage={setSendMessage}\r\n              receiveMessage={receiveMessage}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { UserApi } from \"./UserApi\";\r\n\r\nexport const  userChats = (id)=> UserApi.get(`/chat/${id}`);\r\nexport const  newChat = (senderId,receiverId)=> UserApi.post(`/chat/new/${senderId}/${receiverId}`);"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","getUser","userId","UserApi","get","concat","_ref","_userData$user","_userData$user$avatar","_userData$user2","data","currentUserId","online","_useState","name","avatar","useState","_useState2","_slicedToArray","userData","setUserData","useEffect","_data$members","members","find","getUserData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getUser","_data","wrap","_context","prev","next","sent","t0","console","log","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","className","src","user","url","alt","style","width","height","fontSize","border","addMessage","post","chat","currentUser","setSendMessage","receiveMessage","_useState3","_useState4","messages","setMessages","_useState5","_useState6","newMessage","setNewMessage","scroll","useRef","chatId","_id","prevMessages","_toConsumableArray","_chat$members","fetchMessages","_ref3","_callee2","_yield$getMessages","_context2","handleSend","_ref4","_callee3","_chat$members2","message","_yield$addMessage","receiverId","_context3","preventDefault","senderId","text","_objectSpread","_x","_scroll$current","current","scrollIntoView","behavior","index","ref","format","createdAt","updatedAt","InputEmoji","value","onChange","onClick","useSelector","state","_React$useState","React","_React$useState2","setName","chats","setChats","currentChat","setCurrentChat","onlineUsers","setOnlineUsers","_useState7","_useState8","sendMessage","_useState9","_useState10","setReceiveMessage","socket","dispatch","useDispatch","io","on","logoutUser","Navigate","off","_useSelector2","allUsers","users","loading","emit","getChats","response","undefined","filteredUsers","filter","member","some","includes","handleTalkClick","_currentChat$members","existingChat","newChatData","abrupt","_chat$members3","error","checkOnlineStatus","_chat$members4","chatMember","onSubmit","getAllUsers","type","placeholder","required","target","Button","disabled","_member$avatar","Talk","Conversation","alignSelf","ChatBox"],"sourceRoot":""}